// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace QuipClash.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using QuipClash;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\zacha\source\repos\QuipClash\QuipClash\_Imports.razor"
using QuipClash.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\zacha\source\repos\QuipClash\QuipClash\Pages\Index.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\zacha\source\repos\QuipClash\QuipClash\Pages\Index.razor"
using QuipClash.Server.Hubs;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase, IAsyncDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 66 "C:\Users\zacha\source\repos\QuipClash\QuipClash\Pages\Index.razor"
       
	string debugText = "<empty>";

	string username = "";

	string joinHubInput;
	string responseInput;

	bool isPartyLeader;

	string currentPrompt;
	int currentDuelIndex;
	List<ResponseInfo> currentResponses;

	HubConnection hubConnection;
	bool isConnected;

	private PlayerInfo.PlayerState playerState;

	async Task JoinHub()
	{
		try
		{
			hubConnection = new HubConnectionBuilder()
				.WithUrl(NavigationManager.ToAbsoluteUri($"/hub-1234"))
				.Build();
			hubConnection.On<string, List<ResponseInfo>>("ReceiveResponses", (p, r) => ReceiveResponses(p, r));
			hubConnection.On<string, int>("BeginRespond", (p, d) => BeginRespond(p, d));
			hubConnection.On<PlayerInfo.PlayerState>("UpdatePlayerState", (s) => UpdatePlayerState(s));
			await hubConnection.StartAsync();

			isConnected = true;
			await hubConnection.SendAsync("RegisterPlayer", username);
			isPartyLeader = QuipClashHub.Players[hubConnection.ConnectionId].isPartyLeader;
			UpdatePlayerState(PlayerInfo.PlayerState.Lobby);

			StateHasChanged();
		}
		catch { }
	}

	async Task CreateHub()
	{

	}

	async Task StartGame()
	{
		await hubConnection.SendAsync("StartGame");

		StateHasChanged();
	}

	public void ReceiveResponses(string prompt, List<ResponseInfo> responses)
	{
		currentPrompt = prompt;
		currentResponses = responses;
	}

	public void BeginRespond(string prompt, int duelIndex)
	{
		currentPrompt = prompt;
		currentDuelIndex = duelIndex;

		UpdatePlayerState(PlayerInfo.PlayerState.Responding);

		StateHasChanged();
	}

	async Task SendResponse()
	{
		await hubConnection.SendAsync("SendResponse", responseInput, currentDuelIndex);

		UpdatePlayerState(PlayerInfo.PlayerState.Waiting);
	}

	async Task SendVote(int voteOption)
	{
		await hubConnection.SendAsync("SendVote", voteOption);

		UpdatePlayerState(PlayerInfo.PlayerState.Waiting);
	}

	public void UpdatePlayerState(PlayerInfo.PlayerState state)
	{
		playerState = state;

		StateHasChanged();
	}

	public async ValueTask DisposeAsync()
	{
		if (hubConnection != null)
		{
			await hubConnection.SendAsync("RemovePlayer");
			await hubConnection.DisposeAsync();
		}
	}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
